name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - "config/terraform/aws/*"

defaults:
  run:
    shell: bash
    working-directory: config/terraform/aws

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  BACKEND_BUCKET: ${{ secrets.BACKEND_BUCKET }}
  TF_VAR_ecs_task_key_retrieval_env_hmac_key: ${{ secrets.TF_VAR_ecs_task_key_retrieval_env_hmac_key }}
  TF_VAR_ecs_task_key_retrieval_env_ecdsa_key: ${{ secrets.TF_VAR_ecs_task_key_retrieval_env_ecdsa_key }}
  TF_VAR_ecs_task_key_submission_env_key_claim_token: ${{ secrets.TF_VAR_ecs_task_key_submission_env_key_claim_token }}
  TF_VAR_rds_server_db_password: ${{ secrets.TF_VAR_rds_server_db_password }}
  TF_VAR_route53_zone_name: ${{ secrets.TF_VAR_route53_zone_name }}

jobs:
  terraform-plan:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${BACKEND_BUCKET}" \
            -backend-config="key=aws/backend/default.tfstate" \
            -backend-config="region=ca-central-1"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan

  terraform-apply:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Wait for container to be built and pushed
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build-n-push
          ref: ${{ github.sha }}

      - name: Checkout
        if: steps.wait-for-build.outputs.conclusion == 'success'
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${BACKEND_BUCKET}" \
            -backend-config="key=aws/backend/default.tfstate" \
            -backend-config="region=ca-central-1"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        env:
          TF_VAR_github_sha: ${{ github.sha }}
        run: terraform plan -out terraform.tfplan

      - name: Terraform Apply
        env:
          TF_VAR_github_sha: ${{ github.sha }}
        run: terraform apply -auto-approve terraform.tfplan

      - name: Check For New Deployments
        env:
          GITHUB_SHA: ${{ github.sha }}
          RETRIEVAL_URL: retrieval.${{ secrets.TF_VAR_route53_zone_name }}
          SUBMISSION_URL: submission.${{ secrets.TF_VAR_route53_zone_name }}
        run: |
          count=0
          kr_finished=0
          ks_finished=0

          while [[ $count -le 180 && ($kr_finished -le 5 || $ks_finished -le 5) ]]
          do
            echo "Watching for new deployments - loop ${count}"

            kr_deployed_revision=$(curl -s ${RETRIEVAL_URL}/services/version.json | jq -r .revision)
            if [ "${kr_deployed_revision}" == "${GITHUB_SHA}" ]; then
              kr_finished=$(( $kr_finished + 1 ))
            fi

            ks_deployed_revision=$(curl -s ${SUBMISSION_URL}/services/version.json | jq -r .revision)
            if [ "${ks_deployed_revision}" == "${GITHUB_SHA}" ]; then
              ks_finished=$(( $ks_finished + 1 ))
            fi

            count=$(( $count + 1 ))
            sleep 1
            if [ $count -eq 180 ]; then
              echo "Deployment failed"
              exit 1
            fi
          done

          echo "Key Retrieval was successfully updated - ${GITHUB_SHA}"
          echo "Key Submission was successfully updated - ${GITHUB_SHA}"
          exit 0
